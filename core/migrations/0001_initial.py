# Generated by Django 5.2.4 on 2025-09-13 07:11

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PanelConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surface_area', models.FloatField(help_text='Panel surface area in m²')),
                ('tilt_angle', models.FloatField(help_text='Tilt angle in degrees')),
                ('azimuth_angle', models.FloatField(help_text='Azimuth angle in degrees')),
                ('panel_efficiency', models.FloatField(default=0.2, help_text='Panel efficiency (0.0-1.0)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='OptimalConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optimal_tilt', models.FloatField()),
                ('optimal_azimuth', models.FloatField()),
                ('max_predicted_output', models.FloatField()),
                ('improvement_percentage', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.location')),
                ('current_config', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.panelconfiguration')),
            ],
        ),
        migrations.CreateModel(
            name='SolarPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_date', models.DateField()),
                ('timeframe', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('predicted_output', models.FloatField(help_text='Predicted power output in kWh')),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('weather_data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.location')),
                ('panel_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.panelconfiguration')),
            ],
        ),
        migrations.CreateModel(
            name='PredictionReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('csv', 'CSV'), ('pdf', 'PDF')], max_length=10)),
                ('file_path', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.solarprediction')),
            ],
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('solar_irradiance', models.FloatField(help_text='Solar irradiance in kWh/m²/day')),
                ('temperature', models.FloatField(help_text='Temperature in Celsius')),
                ('humidity', models.FloatField(help_text='Humidity percentage')),
                ('wind_speed', models.FloatField(help_text='Wind speed in m/s')),
                ('cloud_cover', models.FloatField(help_text='Cloud cover percentage')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.location')),
            ],
            options={
                'unique_together': {('location', 'date')},
            },
        ),
    ]
